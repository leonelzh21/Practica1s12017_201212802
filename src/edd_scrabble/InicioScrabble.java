/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edd_scrabble;

import Estructuras.ColaFichas;
import Estructuras.ListaDiccionario;
import java.io.File;
import java.util.Random;
import javax.swing.JFileChooser;

/**
 *
 * @author Alejandro
 */
public class InicioScrabble extends javax.swing.JFrame {

   public static ListaDiccionario diccionarioglobal = new ListaDiccionario();
   public static ColaFichas fichas = new ColaFichas();
    
    public InicioScrabble() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnleerarchivo = new javax.swing.JButton();
        btnjugar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setText("EDD Scrabble");

        btnleerarchivo.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        btnleerarchivo.setText("Leer Archivo");
        btnleerarchivo.setActionCommand("Leer Archivo");
        btnleerarchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnleerarchivoActionPerformed(evt);
            }
        });

        btnjugar.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        btnjugar.setText("Jugar");
        btnjugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnjugarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnleerarchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnjugar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnjugar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnleerarchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnleerarchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnleerarchivoActionPerformed
        String rutaarchivo="";
        JFileChooser Archivo = new JFileChooser();
        Archivo.setFileSelectionMode( JFileChooser.FILES_ONLY );
        int selecarchivo = Archivo.showOpenDialog( this );
 
        if(selecarchivo == JFileChooser.APPROVE_OPTION ){
            File f = Archivo.getSelectedFile();
            try{
                rutaarchivo = f.getAbsolutePath();
            }catch( Exception exp){
                System.out.println("Nose puede cargar el archivo"+ exp);
            }
        }
        
        XML archivoxml = new XML(rutaarchivo);
        //aqui asignamos el nombre y la ruta para graficar la lista de palabras del diccionario
        diccionarioglobal.graficarDiccionario();
        llenacolaFichas();
        
    }//GEN-LAST:event_btnleerarchivoActionPerformed

    private void btnjugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnjugarActionPerformed
        IngresoUsuarios usuario = new IngresoUsuarios();
        usuario.setVisible(true);
    }//GEN-LAST:event_btnjugarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InicioScrabble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InicioScrabble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InicioScrabble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InicioScrabble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InicioScrabble().setVisible(true);
            }
        });
    }
    
    public void llenacolaFichas(){
        Random fichaaleatoria = new Random();
        int numero =0;
        int cantidadA = 12;
        int cantidadB = 2;
        int cantidadC = 4;
        int cantidadD = 5;
        int cantidadE = 12;
        int cantidadF = 1;
        int cantidadG = 2;
        int cantidadH = 2;
        int cantidadI = 6;
        int cantidadJ = 1;
        int cantidadL = 4;
        int cantidadM = 2;
        int cantidadN = 5;
        int cantidadO = 9;
        int cantidadP = 2;
        int cantidadQ = 1;
        int cantidadR = 5;
        int cantidadS = 6;
        int cantidadT = 4;
        int cantidadU = 5;
        int cantidadV = 1;
        int cantidadX = 1;
        int cantidadY = 1;
        int cantidadZ = 1;
        int cantidadÑ = 1;
        while(cantidadA !=0 || cantidadB !=0 || cantidadC != 0 || cantidadD != 0  || cantidadE != 0 || cantidadF != 0 || cantidadG != 0 || cantidadH != 0 || cantidadI != 0 || cantidadJ != 0 || cantidadL != 0 || cantidadM != 0 || cantidadN != 0 || cantidadP != 0 || cantidadQ != 0 || cantidadR != 0 || cantidadS != 0 || cantidadT != 0 || cantidadU != 0 || cantidadV != 0 || cantidadX != 0 || cantidadY != 0 || cantidadZ != 0 || cantidadÑ != 0){
            numero = 1+ fichaaleatoria.nextInt(25);
            switch(numero){
                case 1:
                    if(cantidadA >0){
                        fichas.insertarFichasfinal("A");
                        cantidadA--;
                    }
                break;
                case 2:
                    if(cantidadB >0){
                        fichas.insertarFichasfinal("B");
                        cantidadB--;
                    }
                case 3:
                    if(cantidadC > 0){
                        fichas.insertarFichasfinal("C");
                        cantidadC--;
                    }
                case 4:
                    if(cantidadD > 0){
                        fichas.insertarFichasfinal("D");
                        cantidadD--;
                    }
                case 5:
                    if(cantidadE >0){
                        fichas.insertarFichasfinal("E");
                        cantidadE--;
                    }
                case 6:
                    if(cantidadF > 0){
                        fichas.insertarFichasfinal("F");
                        cantidadF--;
                    }
                case 7:
                    if(cantidadG > 0){
                        fichas.insertarFichasfinal("G");
                        cantidadG--;
                    }
                case 8:
                    if(cantidadH > 0){
                        fichas.insertarFichasfinal("H");
                        cantidadH--;
                    }
                case 9:
                    if(cantidadI > 0){
                        fichas.insertarFichasfinal("I");
                        cantidadI--;
                    }
                case 10:
                    if(cantidadJ > 0){
                        fichas.insertarFichasfinal("J");
                        cantidadJ--;
                    }
                case 11:
                    if(cantidadL > 0){
                        fichas.insertarFichasfinal("L");
                        cantidadL--;
                    }
                case 12:
                    if(cantidadM > 0){
                        fichas.insertarFichasfinal("M");
                        cantidadM--;
                    }
                case 13:
                    if(cantidadN > 0){
                        fichas.insertarFichasfinal("N");
                        cantidadN--;
                    }
                case 14:
                    if(cantidadO > 0){
                        fichas.insertarFichasfinal("O");
                        cantidadO--;
                    }
                case 15:
                    if(cantidadP > 0){
                        fichas.insertarFichasfinal("P");
                        cantidadP--;
                    }
                case 16:
                    if(cantidadQ >0){
                        fichas.insertarFichasfinal("Q");
                        cantidadQ--;
                    }
                case 17:
                    if(cantidadR > 0){
                        fichas.insertarFichasfinal("R");
                        cantidadR--;
                    }
                case 18:
                    if(cantidadS >0){
                        fichas.insertarFichasfinal("S");
                        cantidadS--;
                    }
                case 19:
                    if(cantidadT >0){
                        fichas.insertarFichasfinal("T");
                        cantidadT--;
                    }
                case 20:
                    if(cantidadU >0){
                        fichas.insertarFichasfinal("U");
                        cantidadU--;
                    }
                case 21:
                    if(cantidadV >0){
                        fichas.insertarFichasfinal("V");
                        cantidadV--;
                    }
                case 22:
                    if(cantidadX >0){
                        fichas.insertarFichasfinal("X");
                        cantidadX--;
                    }
                case 23:
                    if(cantidadY >0){
                        fichas.insertarFichasfinal("Y");
                        cantidadY--;
                    }
                case 24:
                    if(cantidadZ > 0){
                        fichas.insertarFichasfinal("Z");
                        cantidadZ--;
                    }
                case 25:
                    if(cantidadÑ >0){
                        fichas.insertarFichasfinal("Ñ");
                        cantidadÑ--;
                    }
            }
            
        }
        fichas.graficasFichas();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnjugar;
    private javax.swing.JButton btnleerarchivo;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
